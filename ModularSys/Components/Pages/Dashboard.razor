@page "/dashboard"
@using MudBlazor
@using ModularSys.Inventory.Interface
@using ModularSys.Data.Common.Entities.Inventory
@using ModularSys.Data.Common.Entities.Finance

@inject NavigationManager Nav
@inject IRevenueService RevenueService
@inject ISalesOrderService SalesOrderService
@inject IPurchaseOrderService PurchaseOrderService
@inject IProductService ProductService
@inject IUserService UserService

<MudContainer MaxWidth="MaxWidth.False" Class="pa-0">
    <!-- Stats Cards -->
    <MudGrid Class="px-0 pb-3" Spacing="2">
        <MudItem xs="12" sm="6" md="3">
            <MudCard Class="stat-card" Elevation="1">
                <MudCardContent>
                    <div class="d-flex align-center">
                        <MudAvatar Color="Color.Primary" Size="Size.Medium" Class="mr-3 stat-icon">
                            <MudIcon Icon="@Icons.Material.Filled.AttachMoney" Size="Size.Medium" Color="Color.Inherit" />
                        </MudAvatar>
                        <div class="flex-grow-1">
                            <MudText Typo="Typo.h6" Class="font-weight-bold mb-1">₱@_totalRevenue.ToString("#,##0.00")</MudText>
                            <MudText Typo="Typo.caption" Color="Color.Secondary">Total Revenue</MudText>
                        </div>
                    </div>
                </MudCardContent>
            </MudCard>
        </MudItem>

        <MudItem xs="12" sm="6" md="3">
            <MudCard Class="stat-card" Elevation="1">
                <MudCardContent>
                    <div class="d-flex align-center">
                        <MudAvatar Color="Color.Warning" Size="Size.Medium" Class="mr-3 stat-icon">
                            <MudIcon Icon="@Icons.Material.Filled.ShoppingCart" Size="Size.Medium" Color="Color.Inherit" />
                        </MudAvatar>
                        <div class="flex-grow-1">
                            <MudText Typo="Typo.h6" Class="font-weight-bold mb-1">@_totalOrders</MudText>
                            <MudText Typo="Typo.caption" Color="Color.Secondary">Orders</MudText>
                        </div>
                    </div>
                </MudCardContent>
            </MudCard>
        </MudItem>

        <MudItem xs="12" sm="6" md="3">
            <MudCard Class="stat-card" Elevation="1">
                <MudCardContent>
                    <div class="d-flex align-center">
                        <MudAvatar Color="Color.Success" Size="Size.Medium" Class="mr-3 stat-icon">
                            <MudIcon Icon="@Icons.Material.Filled.People" Size="Size.Medium" Color="Color.Inherit" />
                        </MudAvatar>
                        <div class="flex-grow-1">
                            <MudText Typo="Typo.h6" Class="font-weight-bold mb-1">@_activeUsers</MudText>
                            <MudText Typo="Typo.caption" Color="Color.Secondary">Active Users</MudText>
                        </div>
                    </div>
                </MudCardContent>
            </MudCard>
        </MudItem>

        <MudItem xs="12" sm="6" md="3">
            <MudCard Class="stat-card" Elevation="1">
                <MudCardContent>
                    <div class="d-flex align-center">
                        <MudAvatar Color="Color.Error" Size="Size.Medium" Class="mr-3 stat-icon">
                            <MudIcon Icon="@Icons.Material.Filled.Inventory" Size="Size.Medium" Color="Color.Inherit" />
                        </MudAvatar>
                        <div class="flex-grow-1">
                            <MudText Typo="Typo.h6" Class="font-weight-bold mb-1">@_inventoryCount</MudText>
                            <MudText Typo="Typo.caption" Color="Color.Secondary">Inventory Items</MudText>
                        </div>
                    </div>
                </MudCardContent>
            </MudCard>
        </MudItem>
    </MudGrid>

    <!-- Charts -->
    <MudGrid Class="px-0 pb-3" Spacing="2">
        <MudItem xs="12" md="6">
            <MudCard Elevation="1" Class="chart-card">
                <MudCardContent>
                    <div class="d-flex justify-space-between align-center mb-3">
                        <MudText Typo="Typo.subtitle1" Class="font-weight-medium">Sales Overview</MudText>
                        <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Size="Size.Small" Variant="Variant.Text" />
                    </div>
                    <MudChart ChartType="ChartType.Line" ChartSeries="@_salesSeries" XAxisLabels="@_months" Width="100%" Height="280px" AxisChartOptions="_chartOptions" />
                </MudCardContent>
            </MudCard>
        </MudItem>

        <MudItem xs="12" md="6">
            <MudCard Elevation="1" Class="chart-card">
                <MudCardContent>
                    <div class="d-flex justify-space-between align-center mb-3">
                        <MudText Typo="Typo.subtitle1" Class="font-weight-medium">Stock Levels per Item</MudText>
                        <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Size="Size.Small" Variant="Variant.Text" />
                    </div>
                    <MudChart ChartType="ChartType.Bar" ChartSeries="@_stockSeries" XAxisLabels="@_items" Width="100%" Height="280px" AxisChartOptions="_chartOptions" />
                </MudCardContent>
            </MudCard>
        </MudItem>
    </MudGrid>

    <!-- Policy Debug Button -->
    <div class="d-flex justify-center mt-4">
        <MudButton Variant="Variant.Filled" Color="Color.Info" StartIcon="@Icons.Material.Filled.Policy" OnClick="@(() => Nav.NavigateTo("/policydebug"))">
            Policy Debug
        </MudButton>
    </div>
</MudContainer>

@code {
    private decimal _totalRevenue;
    private int _totalOrders;
    private int _activeUsers;
    private int _inventoryCount;

    private AxisChartOptions _chartOptions = new AxisChartOptions
    {
        XAxisLabelRotation = -30,
        MatchBoundsToSize = true,
    };

    private List<ChartSeries> _salesSeries = new();
    private string[] _months = Array.Empty<string>();

    private List<ChartSeries> _stockSeries = new();
    private string[] _items = Array.Empty<string>();

    protected override async Task OnInitializedAsync()
    {
        var revenueTransactions = await RevenueService.GetAllAsync();
        var salesOrders = await SalesOrderService.GetAllAsync();
        var products = await ProductService.GetAllAsync();
        var users = await UserService.GetAllAsync();

        _totalRevenue = revenueTransactions.Sum(r => r.Amount);
        _totalOrders = salesOrders.Count();
        _inventoryCount = products.Sum(p => p.QuantityOnHand);
        _activeUsers = users.Count;

        _salesSeries = new List<ChartSeries>
        {
            new ChartSeries
            {
                Name = "Sales",
                Data = salesOrders
                    .GroupBy(o => o.OrderDate.Month)
                    .OrderBy(g => g.Key)
                    .Select(g => (double)g.Sum(o => o.TotalAmount))
                    .ToArray()
            }
        };

        _months = salesOrders
            .GroupBy(o => o.OrderDate.Month)
            .OrderBy(g => g.Key)
            .Select(g => new DateTime(2025, g.Key, 1).ToString("MMM"))
            .ToArray();

        _stockSeries = new List<ChartSeries>
        {
            new ChartSeries
            {
                Name = "Stock",
                Data = products.Select(p => (double)p.QuantityOnHand).ToArray()
            }
        };

        _items = products.Select(p => p.Name).ToArray();
    }
}
